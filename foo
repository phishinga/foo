# yaml-language-server: $schema=https://raw.githubusercontent.com/microsoft/azure-pipelines-vscode/main/service-schema.json

parameters:
  - name: 'acrName'
    displayName: Azure Container Registry Name
    type: string
    default: 'c1pltdevappcr'
  - name: logAnalyticsWorkspaceID
    displayName: Log Analytics workspace ID
    type: string
    default: 'ab0c6b91-dc0b-4e0b-ae69-06393a600ccd'
  - name: akssub
    displayName: AKS Subscription ID
    type: string
    default: 'PLT-DEV-APP-SC'

# Start with clean state
resources:
  containers:
  - container: acr
    image: mcr.microsoft.com/azure-cli

name: 0.1.$(Rev:r)

pool: Plum-PRD-OPS-bap-vmss

trigger: none

stages:
- stage: ListImages
  displayName: List Images in ACR
  jobs:
  - job: ListImages
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Bash@3
      displayName: List Images in ACR
      inputs:
        targetType: inline
        script: |
          az acr login --name $(acrName) --password "$(System.AccessToken)"
          
          # List all images in the ACR starting with "apim"
          images=($(az acr repository list-images --repository $(acrName) --output tsv --query "[?starts_with(name,'apim')].name"))
          
          # Get the last three images deployed to the AKS cluster
          deployed_images=($(az log analytics query --workspace $(logAnalyticsWorkspaceID) --query "ContainerInventory 
          | where Image startswith 'apim/' 
          | distinct Image, ImageTag 
          | take 3
          | project Image"))
          
          # Filter out the last three deployed images from the list of all images
          filtered_images=()
          for image in "${images[@]}"; do
            skip=
            for deployed_image in "${deployed_images[@]}"; do
              [[ $image == $deployed_image ]] && { skip=1; break; }
            done
            [[ -n $skip ]] || filtered_images+=("$image")
          done
          
          # Print the filtered list of images
          echo "Images in ACR starting with 'apim' and excluding the last three deployed to AKS in $(akssub):"
          printf '%s\n' "${filtered_images[@]}"

    - task: PublishBuildArtifacts@1
      displayName: Publish Build Artifacts
      inputs:
        artifactName: images
        pathToPublish: images.txt

